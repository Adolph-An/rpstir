next

	* Fix multiple potential SQL-injection bugs.

0.9

	* Add many more conformance test cases. (See doc/conformance-cases for
	  the full list.) These test cases can be used by relying party
	  software to test compliance with published RFCs and Internet-Drafts.
	  Additionally, relying party software that passes the tests can be
	  used to test the output of a Certification Authority.
	* Fix bugs found by the above test cases.
	* Add a pseudo-random factor to the calculation of how long to wait
	  before retrying an rsync connection. This should help prevent many
	  relying parties from hitting the same server at the same time.
	* Implement basic support for collecting statistics of the RPKI over
	  time.

0.8

	* Support Ghostbusters Records [RFC 6493].
	* Fix a SQL injection bug when a filename in a manifest contains certain
	  characters.
	* Fix a bug where CRLs were not being marked as invalid when their
	  issuers became invalid and manifests were not being marked as invalid
	  when their associated EE certificates became invalid.
	* Fix the query client (rpstir-query) to not consider it an error
	  when no results are returned for a query.
	* Require ROA EE certificates to explicitly specify IP resources.
	  That is, disallow RFC 3779 "inherit" bit in ROA EE certificates.
	* Add functionality to rpstir-results for outputting simple lists
	  of good and bad URIs, to simplify comparison testing.
	* On installation, create ${bindir} if it does not already exist.
	* Improve README based on user feedback.

0.7

	* Add preliminary support for adding files from the local cache. In the
	  future, this could be used to quickly deploy additional relying party
	  machines without each one needing to download all files from the
	  global RPKI.
	* Fix a buffer overflow when manifests list filenames longer than 199
	  bytes.
	* Fix a read of uninitialized memory when the first file listed on a
	  manifest has an unknown extension.
	* Don't allow empty sets of IP resources in certificates.
	  (http://tools.ietf.org/html/rfc6487#section-4.8.10)
	* Don't allow Subsequent Address Family Identifier (SAFI) values in IP
	  resources. (http://tools.ietf.org/html/rfc6487#section-4.8.10)
	* Fix bugs in the ROA validation code where AS numbers equal to zero
	  or larger than 2^31 - 1 were rejected.

0.6

	* Simplify the commands used during normal operation. The commands
	  are now named after what the user intends to do, instead of after the
	  internal component we used to implement them. Some of the scripts are
	  reorganized so that each script does one function (e.g., synchronize
	  with remote repositories) instead of presenting an interface to one
	  internal component (e.g., the component that validates objects fed to
	  it by other components while syncronizing with remote repositories).
	* Use a single configuration file syntax instead of a mix of
	  environment variables and multiple incompatible configuration files.
	  Additionally, provide an example configuration file with comments
	  describing each option. This should make rpstir easier to set up.
	* Switch from one Makefile per directory to a single Makefile. Aside
	  from speeding up parallel compilation, this lets us simplify
	  internal dependencies. With one Makefile per directory, we had to
	  carefully order the directories such that nothing in one directory
	  depended on something in a later directory. Since the dependencies
	  changed over time, this became more and more complex to maintain.
	  With a single Makefile, we can just tell "make" about each dependency
	  and let "make" figure out the order to build things.
	* Remove duplicate code. Before switching to a single Makefile (see
	  above), we occasionally copied functions from one file to another to
	  avoid having to restructure the source tree and reorder the
	  per-directory Makefiles. With a single Makefile keeping track of
	  dependencies, we consolidated the duplicated code and let "make"
	  do the build ordering for us.
	* Find and remove unused code.
	* Improve support for CHECKTOOL. When $CHECKTOOL is set to "valgrind"
	  for the self-tests, much more code is now tested with valgrind.
	* Make it possible to install to the system instead of running from
	  within the source directory.
	* When an rsync download of a trust anchor fails, retry a few times
	  instead of giving up on downloading that trust anchor.
	* Support Cryptlib 3.4.2.
	* Fix a bug that occured when a trust anchor was added after its
	  children. Some of the children that should have been considered valid
	  were considered unknown. This doesn't happen in normal operation, but
	  was discovered during testing at IETF 85.
	* Don't require access to the database root account. As long as
	  rpstir's database user has full permissions on a database, there's
	  no reason to require access to the root database user.

0.5

	* Fix compatibility with older rsync servers.
	* Be more careful about runaway processes in a few places.
	* Log when a URI is dropped from the list to synchronize.
	* Minimize extraneous fetching of remote repositories.
	* Support 20-octet serial numbers, manifest numbers, and CRL numbers.
	* Check for new versions and log when a newer version is available.

0.4

	* Add conformance cases for various specifications and fix problems revealed by those conformance cases.
	* Performance tuning for rsync.
	* Remove dependency on python-netaddr and increase performance where python-netaddr used to be used.
	* Fix build and tests on NetBSD.
	* Fix compiling/linking with pthreads on some platforms.
	* More tests can be run under valgrind.
	* Various bug and compiler warning fixes.

0.3

	* Fix security bugs in rsync_cord and rsync_listener.
	* First-pass at preventing SQL injection attacks.
	* Update chaser to prevent shell injection attacks and to minimize duplicate downloads.
	* Warn if people try to build on an (unsupported) 64-bit platform or if OpenSSL was compiled without RFC 3779 support.
	* Add error checking to rsync_aur.
	* Performance tuning for rpki-rtr.
	* Various bug fixes.

0.2

	* Support current version of rpki-rtr protocol.
	* Various bug fixes.

0.1

	* Initial public release.
