0.6

	* Simplify the commands used during normal operation. The commands
	  are now named after what the user intends to do, instead of after the
	  internal component we used to implement them. Some of the scripts are
	  reorganized so that each script does one function (e.g., synchronize
	  with remote repositories) instead of presenting an interface to one
	  internal component (e.g., the component that validates objects fed to
	  it by other components while syncronizing with remote repositories).
	* Use a single configuration file syntax instead of a mix of
	  environment variables and multiple incompatible configuration files.
	  Additionally, provide an example configuration file with comments
	  describing each option. This should make rpstir easier to set up.
	* Switch from one Makefile per directory to a single Makefile. Aside
	  from speeding up parallel compilation, this lets us simplify
	  internal dependencies. With one Makefile per directory, we had to
	  carefully order the directories such that nothing in one directory
	  depended on something in a later directory. Since the dependencies
	  changed over time, this became more and more complex to maintain.
	  With a single Makefile, we can just tell "make" about each dependency
	  and let "make" figure out the order to build things.
	* Remove duplicate code. Before switching to a single Makefile (see
	  above), we occasionally copied functions from one file to another to
	  avoid having to restructure the source tree and reorder the
	  per-directory Makefiles. With a single Makefile keeping track of
	  dependencies, we consolidated the duplicated code and let "make"
	  do the build ordering for us.
	* Find and remove unused code.
	* Improve support for CHECKTOOL. When $CHECKTOOL is set to "valgrind"
	  for the self-tests, much more code is now tested with valgrind.
	* Make it possible to install to the system instead of running from
	  within the source directory.
	* When an rsync download of a trust anchor fails, retry a few times
	  instead of giving up on downloading that trust anchor.

0.5

	* Fix compatibility with older rsync servers.
	* Be more careful about runaway processes in a few places.
	* Log when a URI is dropped from the list to synchronize.
	* Minimize extraneous fetching of remote repositories.
	* Support 20-octet serial numbers, manifest numbers, and CRL numbers.
	* Check for new versions and log when a newer version is available.

0.4

	* Add conformance cases for various specifications and fix problems revealed by those conformance cases.
	* Performance tuning for rsync.
	* Remove dependency on python-netaddr and increase performance where python-netaddr used to be used.
	* Fix build and tests on NetBSD.
	* Fix compiling/linking with pthreads on some platforms.
	* More tests can be run under valgrind.
	* Various bug and compiler warning fixes.

0.3

	* Fix security bugs in rsync_cord and rsync_listener.
	* First-pass at preventing SQL injection attacks.
	* Update chaser to prevent shell injection attacks and to minimize duplicate downloads.
	* Warn if people try to build on an (unsupported) 64-bit platform or if OpenSSL was compiled without RFC 3779 support.
	* Add error checking to rsync_aur.
	* Performance tuning for rpki-rtr.
	* Various bug fixes.

0.2

	* Support current version of rpki-rtr protocol.
	* Various bug fixes.

0.1

	* Initial public release.
