#!/bin/sh

# This scenario is like evil-twin-ee-invalid except the resources in
# Evil EE have been modified so that the cert validates (the ROA must
# be left alone because the signature can't be forged):
#
#     Good TA (valid)         Evil TA (valid)
#     IPv4: 0.0.0.0/8         IPv4: 1.0.0.0/8
#     IPv6: ::/16             IPv6: 1::/16
#     AS:   1-127             AS:   128-255
#         |                       |
#         |                       |
#     Good ROA (valid)        Evil ROA (invalid due to resources in EE cert)
#     IPv4: 0.0.0.0/25        IPv4: 0.0.0.0/25
#     IPv6: ::/64             IPv6: ::/64
#     AS:   1                 AS:   1
#     via Good EE (valid):    via Evil EE (valid, this is the "evil twin"):
#     IPv4: 0.0.0.0/24        IPv4: 1.0.0.0/24 (modified resources to be valid)
#     IPv6: ::/48             IPv6: 1::/48 (modified resources to be valid)
#     AS:   1-31              AS:   128-159 (modified resources to be valid)

. "${TESTS_BUILDDIR}"/evil-twin-common.sh || exit 1

files="ta-good.cer ta-evil.cer ee-good.roa ee-evil-valid.roa"
exp="ta-good.cer ta-evil.cer ee-good.roa ee-good.roa.cer"

run_tests "${files}" "${exp}"
