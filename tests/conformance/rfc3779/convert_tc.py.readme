The convert_tc.py script was created to convert existing RFC 3779 test
cases into something that would validate and chain in a hierarchy.
Currently, all the testcases are sitting in the testcases/rfc3779
directory as .raw files.  These files are not chained or validated in
any sense of a hierarchy.  The test for these involves removing and
adding specific files in order to test one of the cases.  Several
steps need to be taken in order to convert these .raw files into
useful .cer files that have a hierarchy.  The steps below online what
needs to be done.

This script takes all .cer files from the directory and uses them as
templates for the create_object binary in testbed/src.  It only
changes the serial number, SIA, AIA, ski, aki, issuer name, and
subject name.  It then signs the newly generated certs with the .p15
files that it will generate if desired.


STEP

1) convert all raw files to cer files
        ../tools/create_cert.py "*.raw"

2) make a test directory, literally use the name test, this script
   expects a directory name test
        mkdir -p test

3) if this is the first time you are running this, uncomment the
   gen_key for loop section of the python script so that it will
   create .p15's for you.  You can comment this out to speed up future
   runs as you do not need to create key's everytime this scrit is
   run.

4) run this script
        python convert_tc.py

5) You may need to specifically edit the R.cer or other specific files
   depending on what you are trying to generate.  Be sure to re-sign
   the cert with the correct .p15



The massive sets of IF statements in the script are there in order to
properly set who the parent is for each testcase.  This looks rather
complex, but it was developed by reading the README in the rfc3779
directory.
